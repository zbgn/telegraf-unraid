name: Rebuild on base image change

on:
  schedule:
    - cron: "0 1 * * *"
  push:
    paths:
      - '.github/workflows/rebuild-on-base-image-change.yml'
      - '!*'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - uses: FranzDiebold/github-env-vars-action@v2.3.0
      
      - name: Print environment variables
        run: |
          echo "CI_REPOSITORY_NAME=$CI_REPOSITORY_NAME"

      - name: Prepare GHRC.io
        id: prep
        run: |
          REPO=$CI_REPOSITORY_NAME
          OWNER="$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')"
          DOCKER_IMAGE=${OWNER}/${REPO}
          if [ "$CI_REF_NAME" == "main" ];then VERSION=latest;fi
          if [ "$CI_REF_NAME" == "dev" ];then VERSION=mightly;fi
          if [ "$CI_REF_NAME" == "dockserver" ];then VERSION=dockserver;fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=title::${GITHUB_REPOSITORY}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Check if update available
        id: check
        uses: mkumatag/container-image-updater-action@v1.0.5
        with:
          base-image: library/telegraf:latest
          image: ghcr.io/${{ steps.prep.outputs.tags }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: linux/amd64,linux/armhf,linux/arm64
        if: steps.check.outputs.needs-updating == 'true'

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1.3.0
        if: steps.check.outputs.needs-updating == 'true'

      - name: Cache Docker layers
        uses: actions/cache@v2.1.6
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
        if: steps.check.outputs.needs-updating == 'true'

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request' && steps.check.outputs.needs-updating == 'true'
        uses: docker/login-action@v1.9.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push GHRC.io
        id: docker_build
        uses: docker/build-push-action@v2.5.0
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/armhf,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.title=${{ steps.prep.outputs.title }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
        if: steps.check.outputs.needs-updating == 'true'

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
        if: steps.check.outputs.needs-updating == 'true'
